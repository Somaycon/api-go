definitions:
  handler.CreateTaskRequest:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  handler.CreateTaskResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.TaskResponse'
      message:
        type: string
    type: object
  handler.CreateUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  handler.CreateUserResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.UserResponse'
      message:
        type: string
    type: object
  handler.DeleteTaskResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.TaskResponse'
      message:
        type: string
    type: object
  handler.DeleteUserResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.UserResponse'
      message:
        type: string
    type: object
  handler.ErrorResponse:
    properties:
      errorCode:
        type: string
      message:
        type: string
    type: object
  handler.LoginUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  handler.LoginUserResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.UserResponse'
      message:
        type: string
    type: object
  handler.ShowAllTasksResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/schemas.TaskResponse'
        type: array
      message:
        type: string
    type: object
  handler.ShowAllUsersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/schemas.UserResponse'
        type: array
      message:
        type: string
    type: object
  handler.ShowTaskResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.TaskResponse'
      message:
        type: string
    type: object
  handler.ShowUserResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.UserResponse'
      message:
        type: string
    type: object
  handler.UpdateTaskResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.TaskResponse'
      message:
        type: string
    type: object
  handler.UpdateUserResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.UserResponse'
      message:
        type: string
    type: object
  schemas.Task:
    properties:
      description:
        type: string
      name:
        type: string
      userId:
        type: integer
    type: object
  schemas.TaskResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
      user_id:
        type: integer
    type: object
  schemas.UserResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      task:
        items:
          $ref: '#/definitions/schemas.Task'
        type: array
      updatedAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.LoginUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Login user
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CreateUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Create user
      tags:
      - Auth
  /task:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Task identification
        in: query
        name: id
        required: true
        type: string
      - description: User token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.DeleteTaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Delete task
      tags:
      - Tasks
    get:
      consumes:
      - application/json
      parameters:
      - description: Task identification
        in: query
        name: id
        required: true
        type: string
      - description: User token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ShowTaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get task
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.CreateTaskRequest'
      - description: User token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.CreateTaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Create task
      tags:
      - Tasks
    put:
      consumes:
      - application/json
      parameters:
      - description: Task identification
        in: query
        name: id
        required: true
        type: string
      - description: User token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UpdateTaskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Update task
      tags:
      - Tasks
  /tasks:
    get:
      consumes:
      - application/json
      parameters:
      - description: User token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ShowAllTasksResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: List task
      tags:
      - Tasks
  /user:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User identification
        in: query
        name: id
        required: true
        type: string
      - description: User token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.DeleteUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Delete user
      tags:
      - User
    get:
      consumes:
      - application/json
      parameters:
      - description: User token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ShowUserResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get user
      tags:
      - User
    put:
      consumes:
      - application/json
      parameters:
      - description: User token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.UpdateUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Update user
      tags:
      - User
  /users:
    get:
      consumes:
      - application/json
      parameters:
      - description: User token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.ShowAllUsersResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: List users
      tags:
      - User
swagger: "2.0"
